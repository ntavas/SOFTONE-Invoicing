namespace Invoicing.Tests.Shared;

public class TestConstants
{
    public const string SeedTokenCompany1 = "token_company_001";
    public const string SeedCompany1Name  = "Acme Corp";
    
    public const string SeedTokenCompany2 = "token_company_002";
    
    // Fallback: minimal schema
    public const string MinimalSchema = """
        CREATE EXTENSION IF NOT EXISTS pgcrypto;

        CREATE TABLE IF NOT EXISTS company (
          company_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          name varchar(200) NOT NULL UNIQUE,
          api_token_hash bytea NULL,
          is_active boolean NOT NULL DEFAULT true
        );

        CREATE TABLE IF NOT EXISTS users (
          user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          company_id integer NOT NULL REFERENCES company(company_id) ON DELETE CASCADE,
          display_name varchar(200),
          email varchar(320) UNIQUE,
          is_active boolean NOT NULL DEFAULT true
        );

        CREATE TABLE IF NOT EXISTS invoice (
          invoice_id               integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          date_issued              date             NOT NULL,
          net_amount               numeric(18,2)    NOT NULL,
          vat_amount               numeric(18,2)    NOT NULL,
          total_amount             numeric(19,2) GENERATED ALWAYS AS (net_amount + vat_amount) STORED, -- <â€”
          description              varchar(1000),
          company_id               integer          NOT NULL REFERENCES company(company_id) ON DELETE NO ACTION,
          counterparty_company_id  integer          NOT NULL REFERENCES company(company_id) ON DELETE NO ACTION,
          CONSTRAINT ck_invoice_non_negative CHECK (net_amount >= 0 AND vat_amount >= 0)
        );

        -- Companies with known API tokens
        INSERT INTO company (name, api_token_hash, is_active)
        VALUES
          ('Acme Corp',   digest('token_company_001','sha256'), true),
          ('Globex Ltd',  digest('token_company_002','sha256'), true)
        ON CONFLICT (name) DO NOTHING;

        -- Users for Acme (2 users)
        INSERT INTO users (company_id, display_name, email)
        SELECT company_id, 'Acme Admin', 'acme.admin@example.com'
        FROM company WHERE name = 'Acme Corp'
        ON CONFLICT (email) DO NOTHING;

        INSERT INTO users (company_id, display_name, email)
        SELECT company_id, 'Acme Ops', 'acme.ops@example.com'
        FROM company WHERE name = 'Acme Corp'
        ON CONFLICT (email) DO NOTHING;

        -- One user for Globex
        INSERT INTO users (company_id, display_name, email)
        SELECT company_id, 'Globex Admin', 'globex.admin@example.com'
        FROM company WHERE name = 'Globex Ltd'
        ON CONFLICT (email) DO NOTHING;
        
        INSERT INTO invoice (date_issued, net_amount, vat_amount, description, company_id, counterparty_company_id)
        SELECT '2025-08-01', 100, 24, 'Office supplies', c1.company_id, c2.company_id
        FROM company c1, company c2
        WHERE c1.name = 'Acme Corp' AND c2.name = 'Globex Ltd'
        ON CONFLICT DO NOTHING;
        """;
}